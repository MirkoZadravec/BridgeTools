<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:BridgeTools.PropertyGrid">

    <local:ABLevelToSplitterOffsetConverter x:Key="ABLevelToSplitterOffsetConverter"/>
    <local:ABLevelToExpanderSplitterOffsetConverter x:Key="ABLevelToExpanderSplitterOffsetConverter"/>
    <local:ABLevelToOffsetConverter x:Key="ABLevelToOffsetConverter"/>

    <!-- test bos from https://www.codeproject.com/Tips/1082209/Custom-Datepicker-Style-WPF -->
    <!-- // https://stackoverflow.com/questions/27712590/i-dont-want-message-select-date-in-datepicker -->

    <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"

                    BorderThickness="{TemplateBinding BorderThickness}"

                    Background="{TemplateBinding Background}"

                    Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1"

                                        Storyboard.TargetProperty="Opacity"

                                        Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"

                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"

                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush"

                                Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate"

                                TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="10"/>
                                                    <VisualTransition GeneratedDuration="10"

                                                    To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1"

                                                    To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="10"

                                                        To="#FF448DCA"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (SolidColorBrush.Color)"

                                                        Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[3].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="                                                         (Border.Background).                                                         (GradientBrush.GradientStops)[2].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[1].                                                         (GradientStop.Color)" Storyboard.TargetName=
                                                        "BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (SolidColorBrush.Color)"

                                                        Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty=
                                                        "(UIElement.Opacity)"

                                                        Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0"

                                                            Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[1].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[2].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[3].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[0].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF"

                                        FlowDirection="LeftToRight"

                                        HorizontalAlignment="Right" Height="18"

                                        Margin="0" VerticalAlignment="Center"

                                        Width="18">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="18*"/>
                                                <RowDefinition Height="18*"/>
                                                <RowDefinition Height="18*"/>
                                                <RowDefinition Height="18*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight"

                                            BorderBrush="#FF45D6FA"

                                            BorderThickness="0" Grid.ColumnSpan="4"

                                            CornerRadius="0,0,1,1" Margin="0"

                                            Opacity="0" Grid.Row="0"

                                            Grid.RowSpan="4"/>
                                            <Border x:Name="Background"

                                            BorderBrush="#FFFFFFFF"

                                            BorderThickness="0" Background="#FF1F3B53"

                                            Grid.ColumnSpan="4" CornerRadius=".5"

                                            Margin="0,-1,0,0" Opacity="1"

                                            Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient"

                                            BorderBrush="#BF000000"

                                            BorderThickness="0" Grid.ColumnSpan="4"

                                            CornerRadius=".5" Margin="0,0,0,0"

                                            Opacity="1" Grid.Row="1"

                                            Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1"

                                                    StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF"

                                                        Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF"

                                                        Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF"

                                                        Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF"

                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4"

                                            Grid.RowSpan="1" StrokeThickness="0">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1"

                                                    StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA"

                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1"

                                                    StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F"

                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <!--<Path Grid.ColumnSpan="4" Grid.Column="0"
                                            Data="M11.426758,8.4305077 L11.749023,
                                            8.4305077 L11.749023,
                                            16.331387 L10.674805,16.331387 L10.674805,
                                            10.299648 L9.0742188,
                                            11.298672 L9.0742188,10.294277 C9.4788408,
                                            10.090176 9.9094238,
                                            9.8090878 10.365967,
                                            9.4510155 C10.82251,9.0929432 11.176106,
                                            8.7527733 11.426758,8.4305077 z M14.65086,
                                            8.4305077 L18.566387,
                                            8.4305077 L18.566387,9.3435936 L15.671368,
                                            9.3435936 L15.671368,
                                            11.255703 C15.936341,11.058764 16.27293,
                                            10.960293 16.681133,
                                            10.960293 C17.411602,10.960293 17.969301,
                                            11.178717 18.354229,
                                            11.615566 C18.739157,12.052416 18.931622,
                                            12.673672 18.931622,
                                            13.479336 C18.931622,15.452317 18.052553,
                                            16.438808 16.294415,
                                            16.438808 C15.560365,16.438808 14.951641,
                                            16.234707 14.468243,
                                            15.826504 L14.881817,14.929531 C15.368796,
                                            15.326992 15.837872,
                                            15.525723 16.289043,15.525723 C17.298809,
                                            15.525723 17.803692,
                                            14.895514 17.803692,13.635098 C17.803692,
                                            12.460618 17.305971,
                                            11.873379 16.310528,11.873379 C15.83071,
                                            11.873379 15.399232,
                                            12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                            Fill="#FF2F2F2F" HorizontalAlignment="Center"
                                            Margin="4,3,4,3" Grid.Row="1"
                                            Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5"
                                            Stretch="Fill" VerticalAlignment="Center"/>-->
                                            <TextBlock Margin="0,0" Grid.Row="1"

                                            Grid.RowSpan="3" Grid.ColumnSpan="4"

                                            Grid.Column="0"

                                            Text="{Binding Source={x:Static System:DateTime.Now}, StringFormat=dd}" HorizontalAlignment="Center"

                                            VerticalAlignment="Center" FontSize="10"

                                            FontFamily="Arial Bold" />
                                            <Ellipse Grid.ColumnSpan="4"

                                            Fill="#FFFFFFFF" HorizontalAlignment="Center"

                                            Height="3" StrokeThickness="0"

                                            VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual"

                                            BorderBrush="#B2FFFFFF" BorderThickness="0"

                                            Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5"

                                            Opacity="0" Grid.Row="0"

                                            Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1"

                            Foreground="{TemplateBinding Foreground}"

                                Focusable="False" HorizontalAlignment="Right"

                                 Margin="0,0,0,0" Grid.Row="0"

                                 Template="{StaticResource DropDownButtonTemplate}"

                                 VerticalAlignment="Center" />
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0"

                            Focusable="{TemplateBinding Focusable}"

                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"

                                               Grid.Row="0"

                                               VerticalContentAlignment="Center"

                                               FontSize="{TemplateBinding FontSize}"/>
                            <!--{TemplateBinding VerticalContentAlignment}"-->
                            <Grid x:Name="PART_DisabledVisual"

                            Grid.ColumnSpan="2" Grid.Column="0"

                            IsHitTestVisible="False" Opacity="0"

                            Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF"

                                RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF"

                                Height="18" Margin="0,0,0,0"

                                RadiusY="1" Grid.Row="0"

                                RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="                                 True" Placement="Bottom"

                                PlacementTarget="{Binding ElementName=PART_TextBox}"

                                StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground"

                            TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerStyle1NoButton" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"

                    BorderThickness="{TemplateBinding BorderThickness}"

                    Background="{TemplateBinding Background}"

                    Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1"

                                        Storyboard.TargetProperty="Opacity"

                                        Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"

                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"

                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush"

                                Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate"

                                TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="10"/>
                                                    <VisualTransition GeneratedDuration="10"

                                                    To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1"

                                                    To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="10"

                                                        To="#FF448DCA"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (SolidColorBrush.Color)"

                                                        Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[3].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="                                                         (Border.Background).                                                         (GradientBrush.GradientStops)[2].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[1].                                                         (GradientStop.Color)" Storyboard.TargetName=
                                                        "BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (SolidColorBrush.Color)"

                                                        Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty=
                                                        "(UIElement.Opacity)"

                                                        Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0"

                                                            Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[1].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[2].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[3].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0"

                                                        Duration="00:00:00.001"

                                                        Storyboard.TargetProperty="(Border.Background).                                                         (GradientBrush.GradientStops)[0].                                                         (GradientStop.Color)"

                                                        Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0"

                                                            Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF"

                                        FlowDirection="LeftToRight"

                                        HorizontalAlignment="Right" Height="18"

                                        Margin="0" VerticalAlignment="Center"

                                        Width="18">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="18*"/>
                                                <RowDefinition Height="18*"/>
                                                <RowDefinition Height="18*"/>
                                                <RowDefinition Height="18*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight"

                                            BorderBrush="#FF45D6FA"

                                            BorderThickness="0" Grid.ColumnSpan="4"

                                            CornerRadius="0,0,1,1" Margin="0"

                                            Opacity="0" Grid.Row="0"

                                            Grid.RowSpan="4"/>
                                            <Border x:Name="Background"

                                            BorderBrush="#FFFFFFFF"

                                            BorderThickness="0" Background="#FF1F3B53"

                                            Grid.ColumnSpan="4" CornerRadius=".5"

                                            Margin="0,-1,0,0" Opacity="1"

                                            Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient"

                                            BorderBrush="#BF000000"

                                            BorderThickness="0" Grid.ColumnSpan="4"

                                            CornerRadius=".5" Margin="0,0,0,0"

                                            Opacity="1" Grid.Row="1"

                                            Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1"

                                                    StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF"

                                                        Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF"

                                                        Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF"

                                                        Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF"

                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4"

                                            Grid.RowSpan="1" StrokeThickness="0">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1"

                                                    StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA"

                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1"

                                                    StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F"

                                                        Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <!--<Path Grid.ColumnSpan="4" Grid.Column="0"
                                            Data="M11.426758,8.4305077 L11.749023,
                                            8.4305077 L11.749023,
                                            16.331387 L10.674805,16.331387 L10.674805,
                                            10.299648 L9.0742188,
                                            11.298672 L9.0742188,10.294277 C9.4788408,
                                            10.090176 9.9094238,
                                            9.8090878 10.365967,
                                            9.4510155 C10.82251,9.0929432 11.176106,
                                            8.7527733 11.426758,8.4305077 z M14.65086,
                                            8.4305077 L18.566387,
                                            8.4305077 L18.566387,9.3435936 L15.671368,
                                            9.3435936 L15.671368,
                                            11.255703 C15.936341,11.058764 16.27293,
                                            10.960293 16.681133,
                                            10.960293 C17.411602,10.960293 17.969301,
                                            11.178717 18.354229,
                                            11.615566 C18.739157,12.052416 18.931622,
                                            12.673672 18.931622,
                                            13.479336 C18.931622,15.452317 18.052553,
                                            16.438808 16.294415,
                                            16.438808 C15.560365,16.438808 14.951641,
                                            16.234707 14.468243,
                                            15.826504 L14.881817,14.929531 C15.368796,
                                            15.326992 15.837872,
                                            15.525723 16.289043,15.525723 C17.298809,
                                            15.525723 17.803692,
                                            14.895514 17.803692,13.635098 C17.803692,
                                            12.460618 17.305971,
                                            11.873379 16.310528,11.873379 C15.83071,
                                            11.873379 15.399232,
                                            12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                            Fill="#FF2F2F2F" HorizontalAlignment="Center"
                                            Margin="4,3,4,3" Grid.Row="1"
                                            Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5"
                                            Stretch="Fill" VerticalAlignment="Center"/>-->
                                            <TextBlock Margin="0,0" Grid.Row="1"

                                            Grid.RowSpan="3" Grid.ColumnSpan="4"

                                            Grid.Column="0"

                                            Text="{Binding Source={x:Static System:DateTime.Now}, StringFormat=dd}" HorizontalAlignment="Center"

                                            VerticalAlignment="Center" FontSize="10"

                                            FontFamily="Arial Bold" />
                                            <Ellipse Grid.ColumnSpan="4"

                                            Fill="#FFFFFFFF" HorizontalAlignment="Center"

                                            Height="3" StrokeThickness="0"

                                            VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual"

                                            BorderBrush="#B2FFFFFF" BorderThickness="0"

                                            Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5"

                                            Opacity="0" Grid.Row="0"

                                            Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1"

                            Foreground="{TemplateBinding Foreground}"

                                Focusable="False" HorizontalAlignment="Right"

                                 Margin="0,0,0,0" Grid.Row="0"

                                 Template="{StaticResource DropDownButtonTemplate}"

                                 VerticalAlignment="Center" Visibility="Collapsed"/>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0"

                            Focusable="{TemplateBinding Focusable}"

                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"

                                               Grid.Row="0"

                                               VerticalContentAlignment="Center"

                                               FontSize="{TemplateBinding FontSize}"/>
                            <!--{TemplateBinding VerticalContentAlignment}"-->
                            <Grid x:Name="PART_DisabledVisual"

                            Grid.ColumnSpan="2" Grid.Column="0"

                            IsHitTestVisible="False" Opacity="0"

                            Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF"

                                RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF"

                                Height="18" Margin="0,0,0,0"

                                RadiusY="1" Grid.Row="0"

                                RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="                                 True" Placement="Bottom"

                                PlacementTarget="{Binding ElementName=PART_TextBox}"

                                StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground"

                            TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ABPropGridItemColor" Color="#FFeeeeef"/>
    <SolidColorBrush x:Key="ABPropGridExpanderColor" Color="#FFf8f9f9"/>
    <SolidColorBrush x:Key="ABPropGridBackgroundColor" Color="#FFf8f9f9"/>

    <ControlTemplate x:Key="ABExpanderButtonTemplate" TargetType="ToggleButton">
        <Grid
            Background="Transparent">
            <Border 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="10"
                Height="10"
                BorderThickness="1" 
                CornerRadius="1" 
                BorderBrush="#666">
                <Path 
                    x:Name="ExpandPath"
                    Margin="1"
                    Fill="Transparent"
                    Stroke="Black"
                    Width="10"
                    Height="10"
                    Data="M 0,5 H 10 M 5,0 V 10 Z"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter 
                        Property="Data"
                        TargetName="ExpandPath"
                        Value="M 0,5 H 10 Z"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ABExpanderTemplate" TargetType="{x:Type local:ABExpander}">
        <DockPanel LastChildFill="True">
            <DockPanel
                x:Name="Border" 
                LastChildFill="True"
                DockPanel.Dock="Top"
                Background="{StaticResource ABPropGridExpanderColor}">
                <Border 
                    DockPanel.Dock="Left"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ParentLevel, Converter={StaticResource ABLevelToOffsetConverter}}"
                    BorderThickness="0"/>
                <ToggleButton 
                    IsTabStop="False"
                    DockPanel.Dock="Left"
                    OverridesDefaultStyle="True"
                    Template="{StaticResource ABExpanderButtonTemplate}"
                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter 
                    Margin="5,0,0,0"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </DockPanel>
            <Border 
                x:Name="ExpanderContent" 
                Margin="0" 
                BorderThickness="0"
                Background="{StaticResource ABPropGridItemColor}"
                Visibility="Collapsed">
                <ContentPresenter/>
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ABExpanderStyle" TargetType="{x:Type local:ABExpander}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ABExpanderTemplate}"/>
    </Style>

    <Style x:Key="ABListViewStyle" TargetType="{x:Type local:ABCategory}">
        <Setter Property="Background" Value="{StaticResource ABPropGridBackgroundColor}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ABCategory}">
                    <Border Name="Border" BorderThickness="0">
                        <ItemsPresenter/>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ABPropItemLevelStyle" TargetType="{x:Type local:ABProperty}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ABProperty}">
                    <DockPanel x:Name="ItemBorder" LastChildFill="True" Background="Transparent" Margin="0">
                        <Border 
                                DockPanel.Dock="Left"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ChildLevel, Converter={StaticResource ABLevelToOffsetConverter}}"
                                BorderThickness="0"/>
                        <ContentControl Content="{TemplateBinding Content}" IsTabStop="False"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABPropItemFullRowStyle" TargetType="{x:Type local:ABProperty}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ABProperty}">
                    <DockPanel x:Name="ItemBorder" LastChildFill="True" Background="Transparent" Margin="0">
                        <ContentControl Content="{TemplateBinding Content}" IsTabStop="False"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABListViewItemContainerStyle" TargetType="{x:Type local:ABProperty}">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="1.0" />
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:ABProperty}">
                        <DockPanel x:Name="border" LastChildFill="True" Background="Transparent" Margin="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ABExpanderKeyStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ABExpanderKeyValStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ABLevelToExpanderSplitterOffsetConverter}">
                    <MultiBinding.Bindings>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ABProperty}}" Path="ChildLevel"/>
                        <Binding ElementName="ABSplitter" Path="ActualWidth"/>
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABPropItemKeyStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ABLevelToSplitterOffsetConverter}">
                    <MultiBinding.Bindings>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ABProperty}}" Path="ChildLevel"/>
                        <Binding ElementName="ABSplitter" Path="ActualWidth"/>
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABPropItemValStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Readonly => BasedOn="{StaticResource DatePickerStyle1NoButton}";-->
    <Style x:Key="ABPropItemDateStyle" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource DatePickerStyle1}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ABPropItemSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border x:Name="border1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="2" />
                            <Border x:Name="TrackBackground"
                                        BorderThickness="1" CornerRadius="1"
                                        Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Collapsed" x:Name="PART_SelectionRange" Height="6.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" MaxHeight="6.0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" MaxHeight="6.0"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" MinWidth="8.0"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border1" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox style in propertygrids-->

    <!-- Modified from : https://stackoverflow.com/questions/37929830/wpf-style-for-windows-10-combobox -->
    <!-- Path changed :  https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/frame-styles-and-templates -->

    <SolidColorBrush x:Key="ComboBox.Static.WhiteBackground" Color="White"/>
    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    <SolidColorBrush x:Key="ComboBox.Static.Arrowbutton" Color="#FF606060"/>
    <LinearGradientBrush x:Key="ComboBox.Static.NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">LightGray</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>
    <LinearGradientBrush EndPoint="0.5,1" x:Key="ComboBox.Disabled.ArrowButton"
                                 StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF606060"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Arrowbutton" Color="#FF606060"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="DarkGray"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="LightBlue"/>
    <!-- #FFACACAC" "#FF3C7FB1"-->
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>

    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>

    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="  #FFF4F4F4"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.DisabledBackgroundBrush" Color="LightGray" />

    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFEEEEEF"/>
    <!--"#FFF4F4F4"-->
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <LinearGradientBrush x:Key="ComboBox.ArrowButton.MouseOver" StartPoint="0.5,0" EndPoint="0.5,1" Transform="Identity">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFEFCED" Offset="0.028" />
            <GradientStop Color="#FFFFFCE2" Offset="0.198" />
            <GradientStop Color="#FFFFF8C7" Offset="0.274" />
            <GradientStop Color="#FFFFF8C7" Offset="0.373" />
            <GradientStop Color="#FFFFEDAC" Offset="0.489" />
            <GradientStop Color="#FFFFE08B" Offset="0.500" />
            <GradientStop Color="#FFFFEDAF" Offset="0.944" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBox.ArrowButton.IsPressed" StartPoint="0.5,0" EndPoint="0.5,1" Transform="Identity">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFDFB4" Offset="0.012" />
            <GradientStop Color="#FFFFCA7F" Offset="0.304" />
            <GradientStop Color="#FFFEC051" Offset="0.31" />
            <GradientStop Color="#FFFEEFAD" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                        <!--"{StaticResource ComboBox.Static.Border}" "{StaticResource ComboBox.Static.Background}"-->
                        <Border x:Name="splitBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{StaticResource ComboBox.Static.NormalBrush}" >
                            <Path x:Name="arrow"
                                SnapsToDevicePixels="False"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="1"
                                StrokeLineJoin="Round"
                                Data="M 0 0 L 4 4 L 8 0 Z"
                                Fill="{StaticResource ComboBox.Static.Glyph}">
                            </Path>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.ArrowButton.MouseOver}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.ArrowButton.IsPressed}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="splitBorder"  Value="{StaticResource ComboBox.ArrowButton.IsPressed}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Border}"/>-->
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.ArrowButton}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Static.Glyph}"/>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Background}"/>
                            <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Border}"/>-->
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.NormalBrush}"/>
                            <!--<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Border}"/>-->
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" UseLayoutRounding="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource ComboBox.Static.WhiteBackground}" BorderThickness="1" Background="{StaticResource ComboBox.Static.WhiteBackground}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" Margin="0,0,8,8" >
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"  Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                    </Border.Effect>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="dropDownBorder"  BorderBrush="{StaticResource ComboBox.Static.WhiteBackground}" BorderThickness="1" Background="{StaticResource ComboBox.Static.WhiteBackground}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}"  Margin="0,0,8,8" >
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                    </Border.Effect>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Background="{TemplateBinding Background}"/>
            <Border x:Name="border" Background="{TemplateBinding Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ComboBox.Disabled.Background}"/>
                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBox.Disabled.Border}"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ComboBox.Static.Background}"/>
                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBox.Static.Border}"/>-->
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.WhiteBackground}"/>
        <!--<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>-->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--<Setter Property="BorderThickness" Value="0"/>-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- end ComboBox style in propertygrids-->

    <!-- Button -->
    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>
    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="ControlMouseOverColor">#F8D568</Color>
    <Color x:Key="ControlPressedColor">LightGray</Color>
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>
    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>
    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
    <Style x:Key="PropertygridButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight"
          Value="23" />
        <Setter Property="MinWidth"
          Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="0">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0" />
                                    <!--0.5-->
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            <!--ControlMouseOverColor-->
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault"
                   Value="true">

                            <Setter TargetName="Border"
                    Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>