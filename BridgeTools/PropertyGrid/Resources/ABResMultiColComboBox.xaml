<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:BridgeTools.PropertyGrid.Resources">

    <FontFamily x:Key="abmGeneralFontFamily">SegoeUI</FontFamily>
    <s:Double x:Key="abmGeneralFontSize">12</s:Double>
    <SolidColorBrush x:Key="abmGeneralFontColor" Color="#FF000000"/>

    <SolidColorBrush x:Key="abmPaletteHeaderColor" Color="#FFbec9cb"/>

    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="ControlMouseOverColor">#F8D568</Color>
    <Color x:Key="ControlPressedColor">LightGray</Color>
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>
    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>
    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <!-- ComboBox/MultiColumnComboBox -->
    <SolidColorBrush x:Key="abmCBArrowBrush" Color="#FF546F7A" />
    <SolidColorBrush x:Key="abmCBForegroundBrushDisabled" Color="LightGray" />
    <SolidColorBrush x:Key="abmCBBackgroundBrush" Color="#FFE8ECEE" />
    <SolidColorBrush x:Key="abmCBActiveBackgroundBrush" Color="#FFDCEBF2" />
    <SolidColorBrush x:Key="abmCBEmptyBackgroundBrush" Color="#ffebdbdb" />
    <SolidColorBrush x:Key="abmCBDropDownFieldBrush" Color="#FFE8ECEE" />
    <SolidColorBrush x:Key="abmCBComboBoxOpenBrush" Color="#FFC6E5F5" />

    <Style TargetType="{x:Type syncfusion:GridHeaderCellControl}" x:Key="ABPropValMultiComboHeaderStyle">
        <Setter Property="Background" Value="{StaticResource abmPaletteHeaderColor}"/>
        <Setter Property="Foreground" Value="{StaticResource abmGeneralFontColor}"/>
        <Setter Property="FontSize" Value="{StaticResource abmGeneralFontSize}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <Style TargetType="syncfusion:GridCell" x:Key="gridDropDownCellStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="Foreground" Value="{Binding CellForeground}"/>-->
    </Style>

    <!--Upgrade to syncfusion version 18.3460.0.47-->
    <ControlTemplate x:Key="ABDropDownControlTemplate" TargetType="{x:Type syncfusion:SfMultiColumnDropDownControl}">
        <Border x:Name="PART_RootBorder"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Height="{TemplateBinding Height}"
                Width="{TemplateBinding Width}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Single">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_RootGrid">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_MultiSelectRootGrid">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_ContentPresenter">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_StackPanel">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Multiple">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_RootGrid">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_MultiSelectRootGrid">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_ContentPresenter">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_StackPanel">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard BeginTime="0">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_RootBorder">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="Gray"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Popup x:Name="PART_Popup"
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                       MaxWidth="{TemplateBinding PopupMaxWidth}"
                       MaxHeight="{TemplateBinding PopupMaxHeight}"
                       MinWidth="{TemplateBinding PopupMinWidth}"
                       MinHeight="{TemplateBinding PopupMinHeight}">
                    <Popup.Style>
                        <Style TargetType="{x:Type Popup}">
                            <Setter Property="AllowsTransparency" Value="False"/>
                            <Setter Property="Placement" Value="Absolute"/>
                            <Setter Property="StaysOpen" Value="False"/>
                            <Setter Property="PopupAnimation" Value="Slide"/>
                        </Style>
                    </Popup.Style>
                    <Border x:Name="PART_PopupBorder"
                            BorderBrush="{TemplateBinding PopupBorderBrush}"
                            BorderThickness="{TemplateBinding PopupBorderThickness}">
                        <Grid Background="{TemplateBinding PopupBackground}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentControl x:Name="PART_PopupContent">
                                <syncfusion:SfDataGrid x:Name="PART_SfDataGrid"
                                    AllowEditing="False"
                                    AllowGrouping="False"
                                    AllowDraggingColumns="False"
                                    AutoGenerateColumns="{TemplateBinding AutoGenerateColumns}"
                                    AllowResizingColumns="True"
                                    AllowFiltering="False"
                                    AllowRowHoverHighlighting="True"
                                    BorderThickness="0"
                                    HeaderStyle="{StaticResource ABPropValMultiComboHeaderStyle}"
                                    Background="{TemplateBinding PopupDropDownGridBackground}"
                                    RowSelectionBrush="{StaticResource abmCBComboBoxOpenBrush}"
                                    RowHoverHighlightingBrush="{StaticResource abmCBActiveBackgroundBrush}"
                                    CurrentCellBorderBrush="{StaticResource abmCBComboBoxOpenBrush}"
                                    CurrentCellBorderThickness="0"
                                    CellStyle="{StaticResource gridDropDownCellStyle}"
                                    ColumnSizer="{TemplateBinding GridColumnSizer}"
                                    FocusVisualStyle="{x:Null}"
                                    Focusable="False"
                                    ItemsSource="{TemplateBinding ItemsSource}"
                                    KeyColumn="{x:Null}"
                                    Margin="2,0"
                                    NavigationMode="Row"
                                    RowDragDropController="{x:Null}"
                                    SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ShowBusyIndicator="False"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                                </syncfusion:SfDataGrid>
                            </ContentControl>
                            <Grid Grid.Row="1" Visibility="{TemplateBinding ResizingThumbVisibility}">
                                <Thumb x:Name="PART_ThumbGripper" Cursor="SizeNWSE" HorizontalAlignment="Right">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Grid Background="Transparent">
                                                <Path Data="M36.396,36.017L47.901,36.017 47.901,47.521999 36.396,47.521999z M18.198,36.017L29.716,36.017 29.716,47.521999 18.198,47.521999z M0,36.017L11.511999,36.017 11.511999,47.521999 0,47.521999z M36.396,18.191001L47.901,18.191001 47.901,29.696 36.396,29.696z M18.198,18.191L29.716,18.191 29.716,29.696 18.198,29.696z M36.396,0L47.901,0 47.901,11.512 36.396,11.512z" Fill="#FF727272" Height="12" Stretch="Fill" Width="12"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Grid>
                    </Border>
                </Popup>
                <Grid x:Name="PART_RootGrid" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="PART_TextBox"
                         Visibility="Collapsed"
                         Width="0"
                         Background="{TemplateBinding Background}"
                         Foreground="{TemplateBinding Foreground}"
                         FontWeight="{TemplateBinding FontWeight}"
                         FontStyle="{TemplateBinding FontStyle}"
                         FontStretch="{TemplateBinding FontStretch}"
                         FlowDirection="{TemplateBinding FlowDirection}"
                         FontSize="{TemplateBinding FontSize}"
                         FontFamily="{TemplateBinding FontFamily}"
                         IsReadOnly="{TemplateBinding ReadOnly}"
                         Padding="{TemplateBinding Padding}"
                         TextAlignment="{TemplateBinding TextAlignment}"
                         Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                         TabIndex="{TemplateBinding TabIndex}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="TextWrapping" Value="NoWrap"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="IsReadOnlyCaretVisible" Value="False"/>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Margin="0">
                        <ToggleButton x:Name="PART_ToggleButton" VerticalContentAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="ClickMode" Value="Release"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="Background" Value="Yellow"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="19" />
                                                    </Grid.ColumnDefinitions>

                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                                                        <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlMouseOverColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed" />
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                                                        <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledControlDarkColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                                                        <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledForegroundColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                                                        <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledBorderDarkColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="CheckStates">
                                                            <VisualState x:Name="Checked">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                                                        <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlPressedColor}" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unchecked" />
                                                            <VisualState x:Name="Indeterminate" />
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>

                                                    <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="0">
                                                        <Border.BorderBrush>
                                                            <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                                                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Border.BorderBrush>
                                                        <Border.Background>

                                                            <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStopCollection>
                                                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                                                    </GradientStopCollection>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>

                                                        </Border.Background>
                                                    </Border>
                                                    <Label
                                                         Grid.Column="0"
                                                         Content="{Binding Text, ElementName=PART_TextBox}"
                                                         Background="{Binding Path=Background, ElementName=PART_TextBox}"
                                                         Foreground="{Binding Path=Foreground, ElementName=PART_TextBox}"
                                                         FontWeight="{Binding Path=FontWeight, ElementName=PART_TextBox}"
                                                         FontStyle="{Binding Path=FontStyle, ElementName=PART_TextBox}"
                                                         FontStretch="{Binding Path=FontStretch, ElementName=PART_TextBox}"
                                                         FlowDirection="{Binding Path=FlowDirection, ElementName=PART_TextBox}"
                                                         FontSize="{Binding Path=FontSize, ElementName=PART_TextBox}"
                                                         FontFamily="{Binding Path=FontFamily, ElementName=PART_TextBox}"
                                                         VerticalContentAlignment="{Binding Path=VerticalContentAlignment, ElementName=PART_TextBox}"
                                                         Padding="{Binding Path=Padding, ElementName=PART_TextBox}"/>
                                                    <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                                                        <Path.Fill>
                                                            <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                                        </Path.Fill>
                                                    </Path>
                                                </Grid>
                                            </ControlTemplate>

                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Border>
                </Grid>
                <Grid x:Name="PART_MultiSelectRootGrid" SnapsToDevicePixels="True" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Margin="0">
                        <ToggleButton x:Name="PART_MultiSelectToggleButton" VerticalContentAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="ClickMode" Value="Release"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                    <Setter Property="Focusable" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border Background="White">
                                                    <Grid HorizontalAlignment="Right">
                                                        <Path Data="F1M10.6668,-9.99999999997669E-05L6.0008,4.6669 1.3328,-9.99999999997669E-05 -0.000199999999999534,1.3339 6.0008,7.3329 11.9998,1.3339z" Fill="{TemplateBinding Foreground}" Height="10" Margin="4" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Width="10"/>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Border>
                    <ItemsControl x:Name="PART_ItemsControl" IsHitTestVisible="False" IsTabStop="False" MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Margin="2" Orientation="Horizontal" VerticalAlignment="Center"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_TextBox" Property="Text" Value=""/>
                    <Condition Property="UIElement.IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_TextBox" Property="Background" Value="{StaticResource abmCBEmptyBackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{StaticResource abmCBActiveBackgroundBrush}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="PART_TextBox" Property="Foreground" Value="{StaticResource abmCBForegroundBrushDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ABPropValMultiComboStyle" TargetType="{x:Type syncfusion:SfMultiColumnDropDownControl}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="IsAutoPopupSize" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#ffadd8e6"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="{StaticResource abmGeneralFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource abmGeneralFontSize}"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="AllowIncrementalFiltering" Value="False"/>
        <Setter Property="ReadOnly" Value="True"/>
        <Setter Property="TextSelectionOnFocus" Value="False"/>
        <Setter Property="AllowAutoComplete" Value="False"/>
        <Setter Property="GridColumnSizer" Value="Star"/>
        <Setter Property="PopupBorderThickness" Value="1"/>
        <Setter Property="PopupBackground" Value="#ff1873ae"/>
        <Setter Property="PopupBorderBrush" Value="#ffadd8e6"/>
        <Setter Property="PopupDropDownGridBackground" Value="White"/>
    </Style>

</ResourceDictionary>