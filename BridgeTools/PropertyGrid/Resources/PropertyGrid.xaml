<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BridgeTools.PropertyGrid"
                    xmlns:categories="clr-namespace:BridgeTools.PropertyGrid.Categories"
                    xmlns:converters="clr-namespace:BridgeTools.PropertyGrid.Converters"
                    xmlns:controls="clr-namespace:BridgeTools.PropertyGrid.Controls"
                    xmlns:props="clr-namespace:BridgeTools.PropertyGrid.Properties">

    <converters:ABLevelToSplitterOffsetConverter x:Key="ABLevelToSplitterOffsetConverter"/>
    <converters:ABLevelToExpanderSplitterOffsetConverter x:Key="ABLevelToExpanderSplitterOffsetConverter"/>
    <converters:ABLevelToOffsetConverter x:Key="ABLevelToOffsetConverter"/>

    <SolidColorBrush x:Key="ABPropGridItemColor" Color="#FFeeeeef"/>
    <SolidColorBrush x:Key="ABPropGridExpanderColor" Color="#FFf8f9f9"/>
    <SolidColorBrush x:Key="ABPropGridBackgroundColor" Color="#FFf8f9f9"/>

    <ControlTemplate x:Key="ABExpanderButtonTemplate" TargetType="ToggleButton">
        <Grid
            Background="Transparent">
            <Border 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="10"
                Height="10"
                BorderThickness="1" 
                CornerRadius="1" 
                BorderBrush="#666">
                <Path 
                    x:Name="ExpandPath"
                    Margin="1"
                    Fill="Transparent"
                    Stroke="Black"
                    Width="10"
                    Height="10"
                    Data="M 0,5 H 10 M 5,0 V 10 Z"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter 
                        Property="Data"
                        TargetName="ExpandPath"
                        Value="M 0,5 H 10 Z"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ABExpanderTemplate" TargetType="{x:Type controls:ABExpander}">
        <DockPanel LastChildFill="True">
            <DockPanel
                x:Name="Border" 
                LastChildFill="True"
                DockPanel.Dock="Top"
                Background="{StaticResource ABPropGridExpanderColor}">
                <Border 
                    DockPanel.Dock="Left"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ParentLevel, Converter={StaticResource ABLevelToOffsetConverter}}"
                    BorderThickness="0"/>
                <ToggleButton 
                    IsTabStop="False"
                    DockPanel.Dock="Left"
                    OverridesDefaultStyle="True"
                    Template="{StaticResource ABExpanderButtonTemplate}"
                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter 
                    Margin="5,0,0,0"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </DockPanel>
            <Border 
                x:Name="ExpanderContent" 
                Margin="0" 
                BorderThickness="0"
                Background="{StaticResource ABPropGridItemColor}"
                Visibility="Collapsed">
                <ContentPresenter/>
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ABExpanderStyle" TargetType="{x:Type controls:ABExpander}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ABExpanderTemplate}"/>
    </Style>

    <Style x:Key="ABListViewStyle" TargetType="{x:Type categories:ABCat}">
        <Setter Property="Background" Value="{StaticResource ABPropGridBackgroundColor}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type categories:ABCat}">
                    <Border Name="Border" BorderThickness="0">
                        <ItemsPresenter/>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ABPropItemLevelStyle" TargetType="{x:Type props:ABProp}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type props:ABProp}">
                    <DockPanel x:Name="ItemBorder" LastChildFill="True" Background="Transparent" Margin="0">
                        <Border 
                                DockPanel.Dock="Left"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ChildLevel, Converter={StaticResource ABLevelToOffsetConverter}}"
                                BorderThickness="0"/>
                        <ContentControl Content="{TemplateBinding Content}" IsTabStop="False"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABPropItemFullRowStyle" TargetType="{x:Type props:ABProp}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type props:ABProp}">
                    <DockPanel x:Name="ItemBorder" LastChildFill="True" Background="Transparent" Margin="0">
                        <ContentControl Content="{TemplateBinding Content}" IsTabStop="False"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABListViewItemContainerStyle" TargetType="{x:Type props:ABProp}">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="1.0" />
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type props:ABProp}">
                        <DockPanel x:Name="border" LastChildFill="True" Background="Transparent" Margin="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1.0" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ABExpanderKeyStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ABExpanderKeyValStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ABLevelToExpanderSplitterOffsetConverter}">
                    <MultiBinding.Bindings>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type props:ABProp}}" Path="ChildLevel"/>
                        <Binding ElementName="ABSplitter" Path="ActualWidth"/>
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABPropItemKeyStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ABLevelToSplitterOffsetConverter}">
                    <MultiBinding.Bindings>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type props:ABProp}}" Path="ChildLevel"/>
                        <Binding ElementName="ABSplitter" Path="ActualWidth"/>
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ABPropItemValStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ABPropItemSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border x:Name="border1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="2" />
                            <Border x:Name="TrackBackground"
                                        BorderThickness="1" CornerRadius="1"
                                        Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Collapsed" x:Name="PART_SelectionRange" Height="6.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" MaxHeight="6.0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" MaxHeight="6.0"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" MinWidth="8.0"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border1" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>